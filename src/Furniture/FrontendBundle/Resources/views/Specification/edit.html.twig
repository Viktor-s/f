{% extends 'FrontendBundle:Specification:base.html.twig' %}
{% use 'FrontendBundle:Specification:specification_edit_header.html.twig' %}

{% block title %}{{ ('frontend.title.' ~ (specification.id ? 'edit' : 'create'))|trans }} :: {{ parent() }}{% endblock %}

{% block breadcrumb %}
    {{ parent() }}
    <span class="active">{{ ('frontend.title.' ~ (specification.id ? 'edit' : 'create'))|trans }}</span>
{% endblock %}

{% block content %}
    {% form_theme form 'FrontendBundle:Form:base_horizontal.html.twig' %}
    {% if not specification.id %}
        {{ block('content_with_create') }}
    {% else %}
        {{ block('content_with_edit') }}
    {% endif %}
{% endblock %}

{% block content_with_create %}
    <div id="specification" class="col-sm-6 information-blocks">
        <div class="page-header">
            <h1>Create</h1>
        </div>
        <form action="" method="POST" class="form-horizontal">
            {{ form_widget(form) }}

            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-9 text-right">
                    <a href="{{ path('specifications') }}" class="btn btn-primary">Cancel</a>
                    <button type="submit" class="btn btn-success">{{ 'frontend.save'|trans }}</button>
                </div>
            </div>
        </form>
    </div>
{% endblock %}

{% block content_with_edit %}
    {% set toolbar_position = 'top' %}
    {{ block('toolbar_actions') }}
    {% set specification_block_title = 'frontend.specification_edit'|trans %}
    {{ block('specification_edit_header') }}
    <div class="row">
        <div class="col-sm-12">
            <div class="table-responsive">
                <table id="specification-table" class="table table-striped table-bordered table-condensed" data-specification-id="{{ specification.id }}" >
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th class="text-center">{{ 'frontend.image'|trans }}</th>
                            <th>{{ 'frontend.brand'|trans }}</th>
                            <th>{{ 'frontend.name'|trans }}</th>
                            <th>{{ 'frontend.options'|trans }}</th>
                            <th>{{ 'frontend.notes'|trans }}</th>
                            <th>{{ 'frontend.quantity'|trans }}</th>
                            <th class="text-center">{{ 'frontend.price'|trans }}</th>
                            <th class="text-center">{{ 'frontend.total_price'|trans }}</th>
                            <th class="text-center">{{ 'frontend.actions'|trans }}</th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for specification_item in specification.items %}
                        {% if specification_item.skuItem %}
                            {% include 'FrontendBundle:Specification/edit:_sku_table_item.html.twig' with {'specification_item':specification_item} %}
                        {% elseif specification_item.customItem %}
                            {% include 'FrontendBundle:Specification/edit:_custom_table_item.html.twig' with {'specification_item':specification_item} %}
                        {% endif %}
                    {% endfor %}
                    </tbody>
                    <tfoot>
                        <tr class="total-price">
                            <td colspan="2"></td>
                            <td class="text-right">{{ 'frontend.volume'|trans }}</td>
                            <td class="text-left editable" rel="volume" id="volume" title="Click to edit">{{ specification.volume }}</td>
                            <td class="text-right">{{ 'frontend.weight'|trans }}</td>
                            <td class="text-left editable" rel="weight" id="weight" title="Click to edit">{{ specification.weight }}</td>
                            <td colspan="3" class="text-right editable" id="add-extra-sale" title="Click to add discount">{{ 'frontend.total_price'|trans }}</td>
                            <td><span rel="total-price" class="final-price"></span></td>
                        </tr>

                        <tr class="specification-sale" data-sale-prototype="{{ block('specification_sale')|e }}">
                            <td colspan="2" id="extra-sale-td" nowrap style="text-align: left;">
                                {% set sales_count = specification.sales|length %}
                                {% if sales_count > 0 %}
                                    {% for sale in specification.sales %}
                                        {{ block('specification_sale')|replace({__index__: loop.index, __sale__: sale.sale})|raw }}
                                    {% endfor %}
                                {% endif %}
                            </td>
                            <td colspan="4"></td>
                            <td colspan="3" rowspan="1" class="text-right">
                                {{ 'frontend.final_price'|trans }}
                            </td>
                            <td><span rel="final-price" class="final-price">{{ specification|specification_total_price|money }}</span></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    {% set toolbar_position = 'bottom' %}
    {{ block('toolbar_actions') }}
{% endblock %}

{% block specification_sale %}
    <div class="sale">
        <a href="#">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
        </a>
        <span>discount </span>
        <span id="specification-sale" class="edit" data-index="__index__">__sale__</span>
        <span>%: -</span><span class="discount_summ"></span>
    </div>
{% endblock %}

{% block toolbar_actions %}
    <div class="toolbar toolbar-{{ toolbar_position }}">
        <div class="row">
            <div class="col-md-3  col-sm-4">
                <div class="simple-search-form">

                    <input type="text" id="search-{{ toolbar_position }}" placeholder="Search in this specification">
                    <div class="submit-icon">
                        <i class="fa fa-search"></i>
                    </div>
                </div>
            </div>
            <div class="col-md-4  col-sm-5  col-sm-offset-3 col-md-offset-5">
                <div class="text-right">
                    <a href="#" id="add-custom-item-btn-{{ toolbar_position }}" class="btn btn-primary">AddCustom</a>
                    {% if not specification.finished and specification.items|length > 0 and is_granted('FINISH', specification) %}
                        <a class="btn btn-danger btn-xs" data-remove data-message="Are you sure you want to finish (close) specification?" href="{{ path('specification_finish', {specification: specification.id}) }}">{{ 'frontend.finish'|trans }}</a>
                    {% endif %}
                    {% if is_granted('EXPORT', specification) and specification.items|length > 0 %}
                        <a class="btn btn-success btn-xs" href="{{ path('specification_export_preview', {specification: specification.id}) }}">{{ 'frontend.export'|trans }}</a>
                    {% endif %}
                    <a class="glyphicon glyphicon-remove mv-remove" data-toggle="tooltip" title="Remove" aria-hidden="true" href="{{ path('specification_remove', {specification: specification.id}) }}" data-remove="" data-message="Are you sure you want to remove this specification?"></a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block footer_javascripts %}
    {{ parent() }}

    {% if specification.id %}
        <script type="text/javascript">
            (function ($) {
                function moneyHelper(money)
                {
                    return '{{ 0|money }}'.replace( /0.00/, money );
                }
                
                function isIntoView(el)
                {
                    var
                        $window = $(window),
                        docViewTop = $window.scrollTop(),
                        docViewBottom = docViewTop + $window.height(),
                        elTop = el.offset().top,
                        elBottom = elTop + el.height();

                    return ((elBottom <= docViewBottom) && (elTop >= docViewTop));
                }

                var
                    scrollTo = function(el)
                    {
                        $('html, body').animate({
                            scrollTop: el.offset().top-150
                        }, 200);
                    },

                    scrollToView = function(el){
                        if(!isIntoView(el)){
                            scrollTo(el);
                        }
                    };

                $.editable.addInputType('price', {
                    element : function(settings, original) {
                        var input = $('<input type="number" step="0.01">');
                        $(this).append(input);

                        return(input);
                    },
                    submit : function (settings, original) {
                        if (isNaN($(original).val())) {
                            alert('You must provide a number');
                            return false;
                        } else {
                            return true;
                        }
                    }
                });

                $.editable.addInputType('integer', {
                    element : function(settings, original) {
                        var input = $('<input type="number">');
                        $(this).append(input);
                        return(input);
                    },
                    submit : function (settings, original) {
                        if (isNaN($(original).val())) {
                            alert('You must provide a number');
                            return false;
                        } else {
                            return true;
                        }
                    }
                });

                var specificationId = {{ specification.id }};
                
                $(document).ready(function () {
                    var progressBasr = '<div class="progress progress-striped active"><div class="progress-bar"  role="progressbar" aria-valuenow="100%" aria-valuemin="0" aria-valuemax="100" style="width: 100%">Saving ...</div>\</div>';
                    /* Top form */
                    var editableUrl = '{{ path('specification_api_specification_editable', {specification: specification.id}) }}',

                    editableParams = {
                        width: '100%',
                        height: '100%',
                        cssclass: 'editable-form',
                        "submit": '<button type="button" class="btn btn-default" aria-label="Left Align"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> </button>',
                        tooltip: '{{ 'frontend.click_to_edit'|trans }}',
                        indicator: function(){
                            return progressBasr;
                        }
                    };
        
                    /* table code */
                    var 
                        trTotalPriceSpecificationUpdater = function()
                        {
                            var url = '{{path('specification_api_specification_info', { itemId: 123, index: 'itemIndex' })}}'
                                    .replace( /123/, $('#specification-table').data('specification-id').toString())
                                    .replace(/itemIndex/, 'priceInfo');

                            $.ajax({
                                url: url,
                                dataType: 'json',
                                type: 'get',
                                success: function (res) {
                                    $('[rel="final-price"]').html(res.totalPriceWithExtraDisc);
                                    $('[rel="total-price"]').html(res.totalPrice);
                                    $('#extra-sale-td .sale').each(function(i){
                                        var saleWrap = $(this);
                                        saleWrap.find('.discount_summ').html(res.salesAmounts[i]);       
                                    });
                                }
                            });
                        };

                    trTotalPriceSpecificationUpdater();

                    var trTotalPriceUpdater = function(tr)
                        {
                            var url = '{{path('specification_api_specification_custom_Item_info', { itemId: 123, index: 'itemIndex' })}}'
                                    .replace( /123/, tr.data('id').toString())
                                    .replace(/itemIndex/, 'totalPrice');

                            $.ajax({
                                url: url,
                                type: 'get',
                                success: function (res) {
                                    tr.find('td:eq(8)').html(res);
                                }
                            });
                        },

                        getTdTableEditableBaseOption = function(dataTableO, tr, td, itemCallback)
                        {
                            var
                                itemIndex = td.data('index'),
                                inputType = td.data('type'),
                                table = dataTableO;

                            itemCallback = itemCallback ? itemCallback : function(){};

                            return {
                                "type": inputType,
                                "submit": '<button type="button" class="btn btn-default" aria-label="Left Align"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> </button>',
                                "onreset": function(){
                                    tr.removeClass('active');
                                },
                                "callback": function( sValue, y ) {
                                    var aPos = table.fnGetPosition( this );
                                    table.fnUpdate( sValue, aPos[0], aPos[1] );
                                    tr.animate({
                                        opacity: 0.0
                                    }, 200 ).promise().then(function(){
                                        tr.animate({
                                            opacity: 1
                                        }, 300 );
                                    });

                                    itemCallback();

                                    scrollToView(tr);
                                },
                                "submitdata": function ( value, settings ) {
                                    return {
                                        id: itemIndex
                                    };
                                },
                                "indicator": function(){
                                    return progressBasr;
                                },
                                "height": "100%",
                                "width": "100%"
                            }
                        },

                        initializeUploaderForTableRow = function (tr)
                        {
                            tr.find('.image-ajax-container').each(function () {
                                var q = new ImageAjax($(this), {
                                    onRemove: function () {
                                        tr.addClass('danger');

                                        bootbox.confirm('{{ 'frontend.are_you_sure_remove_image'|trans }}', function(result) {
                                            if (result) {
                                                $.ajax({
                                                    url: '{{ path('specification_api_specification_custom_item_remove_image', {item: 123}) }}'.replace(/123/, tr.data('custom-id')),
                                                    method: 'GET',
                                                    complete: function () {
                                                        tr.removeClass('danger');
                                                    },
                                                    success: function () {
                                                        q.setImagePath('');
                                                        q.viewImageUpload();
                                                    },
                                                    error: function () {
                                                    }
                                                });
                                            } else {
                                                tr.removeClass('danger');
                                            }
                                        });

                                        return false;
                                    }
                                });
                            });
                        },

                        customItemInitializer = {
                            editableRoute: '{{ path('specification_api_specification_custom_Item_editable', { item:123}) }}',
                            tdDefaultSubject: function(dataTableO, tr, td){
                                td.unbind();
                                var itemId = tr.data('id');
                                td.click(function(){
                                        tr.parents('table:first').find('.active').removeClass('active');
                                        tr.addClass('active');
                                    });
                                var url = this.editableRoute.replace(/123/, itemId.toString());
                                td.editable( url, getTdTableEditableBaseOption(dataTableO, tr, td) );
                            },
                            trPriceSubject: function(dataTableO, tr, td){
                                td.unbind();
                                var itemId = tr.data('id');
                                td.click(function(){
                                    tr.parents('table:first').find('.active').removeClass('active');
                                    tr.addClass('active');
                                });
                                var url = this.editableRoute.replace(/123/, itemId.toString());
                                td.editable( url, getTdTableEditableBaseOption(dataTableO, tr, td, function(){
                                    trTotalPriceUpdater(tr);
                                    trTotalPriceSpecificationUpdater();
                                }));
                            }
                        },

                        specificationItemInitializer = {
                            editableRoute: '{{ path('specification_api_specification_item_editable', {item: 123}) }}',
                            tdDefaultSubject: function(dataTableO, tr, td){
                                td.unbind();
                                itemId = tr.data('id');
                                td.click(function(){
                                    tr.parents('table:first').find('.active').removeClass('active');
                                    tr.addClass('active');
                                });
                                var url = this.editableRoute.replace(/123/, itemId.toString());
                                td.editable( url, getTdTableEditableBaseOption(dataTableO, tr, td) );
                            },
                            tdQuantitySubject: function(dataTableO, tr, td){
                                td.unbind();
                                itemId = tr.data('id');
                                td.click(function(){
                                    tr.parents('table:first').find('.active').removeClass('active');
                                    tr.addClass('active');
                                });
                                var url = this.editableRoute.replace(/123/, itemId.toString());
                                td.editable( url, getTdTableEditableBaseOption(dataTableO, tr, td, function(){
                                    trTotalPriceUpdater(tr);
                                    trTotalPriceSpecificationUpdater();
                                }));
                            }
                        },

                        table = $('#specification-table').dataTable({
                            language: {
                                search: 'Search in this specification:'
                            },
                            dom: '<"top"><"bottom"lp><"clear">',
                            paging: false,
                            rowCallback: function( row, data, index ) {
                                var itemEditableUrl = '{{ path('specification_api_specification_item_editable', {item: 123}) }}';
                                var customItemEditableUrl = '{{ path('specification_api_specification_custom_Item_editable', { item:123}) }}';
                                var tr = $(row);
                                tr.find('td').each(function(i){
                                    var td = $(this);

                                    if( !td.data('type') || !td.data('server-type') || !td.data('index')) {
                                        return;
                                    }

                                    if(td.data('index') === 'price'){
                                        customItemInitializer.trPriceSubject(table, tr, td);
                                    }else if(td.data('index') === 'quantity'){
                                        specificationItemInitializer.tdQuantitySubject(table, tr, td);
                                    }else if(td.data('server-type') === 'custom-item'){
                                        customItemInitializer.tdDefaultSubject(table, tr, td);
                                    }else if(td.data('server-type') === 'specification-item'){
                                        specificationItemInitializer.tdDefaultSubject(table, tr, td);
                                    }
                                });
                            },
                            columns: [
                                { orderable: true },
                                { orderable: false },
                                { orderable: true },
                                { orderable: false },
                                { orderable: false },
                                { orderable: false },
                                { orderable: true },
                                { orderable: true },
                                { orderable: true },
                                { orderable: false }
                            ]
                        }),

                        tableEdit = table.DataTable();

                    tableEdit.draw();

                    function filterGlobal (dataTable, val) {
                        dataTable.search(val, false, true).draw();
                    }
                    $('input#search-top').on( 'keyup click', function (e) {
                        filterGlobal(tableEdit, $(this).val());
                    });
                    $('input#search-bottom').on( 'keyup click', function (e) {
                        /* Prevent form submission */
                        filterGlobal(tableEdit, $(this).val());
                    });


                    /* Add custom row */
                    $('#add-custom-item-btn-top, #add-custom-item-btn-bottom').click(function(){
                        $.ajax({
                            url: '{{ path('specification_api_specification_custom_Item_add') }}',
                            type: 'post',
                            data: {
                                specification: specificationId,
                                factoryName: '',
                                name: '',
                                price: 0,
                                quantity: 1,
                                note: ''
                            },
                            error: function () {
                                alert('Error adding specification item. Please try again.');
                            },
                            success: function (res) {
                                var
                                    data = res.data,
                                    rowData = [];

                                rowData.push('');
                                rowData.push('');
                                rowData.push('');
                                rowData.push(data.name ? data.name : '' );
                                rowData.push(data.options ? data.options : '' );
                                rowData.push(data.note ? data.note : '' );
                                rowData.push(data.quantity+'');
                                rowData.push('0');
                                rowData.push('0');
                                rowData.push('edit');

                                var row = $(tableEdit.row.add(rowData).node());

                                var imageAjaxContainer = '<div class="image-ajax-container" data-full-name="custom[__custom_id__][path]" data-url-upload="__upload_url__">\
                                        <div class="image-upload">\
                                            <img data-src="holder.js/150x150?text=Choose image" width="150" height="150" />\
                                        </div>\
                                        <div class="form-widget">\
                                            <input type="hidden" name="custom[__custom_id__][path]" />\
                                        </div>\
                                        <div class="image-container">\
                                            <div class="product-image">\
                                                <a href="#remove-image" class="mv-remove"><i class="glyphicon glyphicon-remove" aria-hidden="true"></i></a>\
                                                <img width="150" height="150" src="" />\
                                            </div>\
                                        </div>\
                                    </div>';

                                imageAjaxContainer = imageAjaxContainer
                                    .replace(/__custom_id__/g, data.customId)
                                    .replace(/__upload_url__/g, '{{ path('specification_api_specification_custom_item_upload_image', {item: 123}) }}'.replace(/123/, data.customId));

                                row
                                    .find('td').last()
                                    .html('<a class="glyphicon glyphicon-remove mv-remove remove" aria-hidden="true" href="#"></a>');

                                row
                                    .data('id', data.id)
                                    .data('custom-id', data.customId);

                                row
                                    .find('td:eq(0)')
                                    .data('index', 'position')
                                    .data('type', 'text')
                                    .data('server-type', 'custom-item')
                                    .addClass('text-center');

                                row
                                    .find('td:eq(1)')
                                    .html(imageAjaxContainer);

                                row
                                    .find('td:eq(2)')
                                    .data('index', 'factoryName')
                                    .data('type', 'text')
                                    .data('server-type', 'custom-item');

                                row.find('td:eq(3)')
                                    .data('index', 'name')
                                    .data('type', 'text')
                                    .data('server-type', 'custom-item');
                            
                                row.find('td:eq(4)')
                                    .data('index', 'options')
                                    .data('type', 'textarea')
                                    .data('server-type', 'custom-item');

                                row.find('td:eq(5)')
                                    .data('index', 'note')
                                    .data('type', 'textarea')
                                    .data('server-type', 'specification-item');

                                row.find('td:eq(6)')
                                    .data('index', 'quantity')
                                    .data('type', 'integer')
                                    .data('server-type', 'specification-item');

                                row.find('td:eq(7)')
                                    .data('index', 'price')
                                    .data('type', 'price')
                                    .data('server-type', 'custom-item');

                                tableEdit.row(row).draw();
                                scrollToView(row);
                                row.addClass('active');
                                initializeUploaderForTableRow(row);
                                Holder.run(row.find('.image-container img').get(1));
                            }
                        });

                        return false;
                    });

                    $('tr[data-custom-id]').each(function () {
                        initializeUploaderForTableRow($(this));
                    });

                    /* Delete row */
                    $(document).on('click', '#specification-table .remove', function () {
                            var a = $(this);
                            var td = a.parents('td').first();
                            var tr = td.parents('tr').first();
                            var itemId = tr.data('id');
                            tr.addClass('danger');

                            bootbox.confirm('{{ 'frontend.are_you_sure_remove_specification_item'|trans }}', function(result) {
                                if(result){
                                    td.html(progressBasr);
                                    $.ajax({
                                        url: '{{ path('specification_api_specification_item_remove', {item: 123}) }}'.replace(/123/, itemId.toString()),
                                        complete: function () {
                                            tr.removeClass('danger');
                                            a.prop('disabled', false);
                                            console.log('complete remove');
                                            trTotalPriceSpecificationUpdater();
                                        },
                                        error: function () {
                                            alert('Error with remove specification item. Please try again.');
                                        },
                                        success: function () {
                                            console.log('success remove');
                                            tr.animate({
                                                height: '0px'
                                            }, 50, 'swing', function () {
                                                tableEdit
                                                        .row(tr)
                                                        .remove()
                                                        .draw();
                                            });
                                        }
                                    });
                                }else{
                                    tr.removeClass('danger');
                                }
                            }); 
                            return false;
                    });                    
                    
                    /*Other editable element*/
                    $('.specification-info .editable.name').editable(editableUrl, editableParams);
                    $('.specification-info .editable.document-number').editable(editableUrl, editableParams);

                    $('.specification-info .editable.description').editable(editableUrl, $.extend({
                        type: 'textarea',
                        "submit": '<button type="button" class="btn btn-default" aria-label="Left Align"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> </button>',
                    }, editableParams));
                    
                    var
                        saleInitialize = function (el)
                        {
                            el = $(el);
                            var editable = el.find('.edit');
                            var remove = el.find('a');

                            editable.editable(editableUrl, {
                                width: '48px',
                                style: "display: inline-block;",
                                height: '100%',
                                submitdata: function (value) {
                                    return {
                                        index: editable.data('index')
                                    }
                                },
                                callback: function() {
                                    trTotalPriceSpecificationUpdater();
                                }
                            });

                            remove.click(function(){
                                el.html(progressBasr);
                                $.ajax({
                                    method: 'POST',
                                    url: '{{ path('specification_api_specification_item_remove_extra_sale', {specification: specification.id}) }}',
                                    data: {
                                        index: editable.data('index')
                                    }
                                }).done(function() {
                                    updateExtraSaleIndexes();
                                    trTotalPriceSpecificationUpdater();
                                    el.remove();
                                    viewOrHideFinalPriceBySales();
                                });

                                return false;
                            });
                        },

                        updateExtraSaleIndexes = function()
                        {
                            var index = 1;

                            $('#extra-sale-td').find('.edit').each(function(){
                                $(this).data('index', index++);
                            });
                        },

                        viewOrHideFinalPriceBySales = function ()
                        {
                            var finalPrice = $('tr.final-price');

                            if ($('div.sale').size() > 0) {
                                finalPrice.removeClass('hide');
                            } else {
                                finalPrice.addClass('hide');
                            }
                        };
                    
                    $('#add-extra-sale').click(function(){
                        var e = $('#extra-sale-td');

                        if (e.find('.edit').length >= 3 ) {
                            return false;
                        }

                        var lastel = e.children().last();
                        
                        var line = $('[data-sale-prototype]').data('sale-prototype');
                        line = line
                            .replace( /__index__/, $('div.sale').size() + 1)
                            .replace( /__sale__/, 0);

                        var newSale = $(line);

                        if(lastel.length > 0){
                            lastel.after(newSale);
                        }else{
                            $('#extra-sale-td').append(newSale);
                        }

                        newSale.children().hide();
                        newSale.append(progressBasr);

                        $.ajax({
                            method: 'POST',
                            url: editableUrl,
                            data: {
                               'id': 'specification-sale',
                               'index': newSale.find('.edit').data('index'),
                               'value': 0
                            }
                        }).done(function() {
                            saleInitialize(newSale);
                            newSale.find('.progress').remove();
                            newSale.children().show();
                            newSale.find('.edit').trigger('click');
                            updateExtraSaleIndexes();
                            viewOrHideFinalPriceBySales();
                        });

                        return false;
                    });
                    
                    $('tr.specification-sale .sale').each(function(){
                        saleInitialize(this);
                    });

                    $('.specification-info .editable.buyer').editable(editableUrl, $.extend({
                        type: 'select',
                        loadurl: '{{ path('specification_api_specification_buyers') }}',
                        submit: 'Ok',
                        callback: function(){
                            bootbox.dialog({
                                title: "",
                                message: "<h3>{{ 'frontend.specficatior.page_reload_alert'|trans }}</h3>",
                            });
                            location.reload();
                        }

                    }, editableParams));

                    (function (url, params) {
                        $('[rel="volume"]').editable(url, params);
                        $('[rel="weight"]').editable(url, params);
                    })(editableUrl, editableParams);
                })
            })(jQuery);
        </script>
    {% endif %}
{% endblock %}
